package com.wondersgroup.framework.wjxy;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**   ***********************************************
 * Simple to Introduction  
 * @ProjectName:  [ybsjtc]
 * @Package:      [com.wondersgroup.framework.wjxy]
 * @ClassName:    [Xy_Extend]   
 * @Description:  [一句话描述该类的功能]  
 * @Author:       [Administrator]   	   
 * @CreateDate:   [2018年2月26日 下午11:49:16]  
 * @UpdateUser:   [Administrator]   	   
 * @UpdateDate:   [2018年2月26日 下午11:49:16]  
 * @UpdateRemark: [说明本次修改内容]     
 * @Version:      [v1.0] 		   
 ************************************************** **/
public class Xy_Extend {
	/**
	 * @Title: isJavaClass
	 * @Description: 对于实例化的具体属性进行类型的判断 是否是实现类或者是java基础类型(注意ArrayList是个例外，需要特殊处理)
	 * @param: Class<?> clz
	 * @return: boolean
	 * @throws
	 * @author dld
	 * @Date 20151104
	 */
	public static boolean isJavaClass(Class<?> clz) {
		return clz != null && clz.getClassLoader() == null;
	}
    /**@Title: 		 length   
     * @Description: TODO[计算含中文的字符串字符数]   
     * @param value
     * @return      
     * @return_type: int      
     */
    public static int length(String value) {  
        int valueLength = 0;  
        String chinese = "[\u0391-\uFFE5]";  
        /* 获取字段值的长度，如果含中文字符，则每个中文字符长度为2，否则为1 */  
        for (int i = 0; i < value.length(); i++) {  
            /* 获取一个字符 */  
            String temp = value.substring(i, i + 1);  
            /* 判断是否为中文字符 */  
            if (temp.matches(chinese)) {  
                /* 中文字符长度为2 */  
                valueLength += 2;  
            } else {  
                /* 其他字符长度为1 */  
                valueLength += 1;  
            }  
        }  
        return valueLength;  
    }
    
	/**@Title: 		 SubStr   
	 * @Description: TODO[正则切割提取]   
	 * @param re
	 * @param str
	 * @return      
	 * @return_type: String      
	 */
	public static String SubStr(String re, String str) {
		Pattern p = Pattern.compile(re);
		Matcher m = p.matcher(str);
		while (m.find()) {
			return m.group();
		}
		return "";
	}
}
