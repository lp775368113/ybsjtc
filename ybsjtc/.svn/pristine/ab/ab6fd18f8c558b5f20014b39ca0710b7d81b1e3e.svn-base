package com.wondersgroup.k00.f30100103.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.wondersgroup.framework.comwork.vo.GridReturnVO;
import com.wondersgroup.framework.comwork.controller.BaseController;
import com.wondersgroup.framework.mpage.PageInfo;
import com.wondersgroup.k00.f30100103.service.F30100103Service;
import com.wondersgroup.k00.f30100103.vo.F30100103VO;

/**
 * ***********************************************
 * Simple to Introduction  
 * @ProjectName:  [ybsjtc]
 * @Package:      [com.wondersgroup.k00.f30100102.controller]
 * @ClassName:    [F30100102Controller]   
 * @Description:  [一句话描述该类的功能]  
 * @Author:       [wangr]   	   
 * @CreateDate:   [2018年1月30日 下午1:26:36]  
 * @UpdateUser:   [wangr]   	   
 * @UpdateDate:   [2018年1月30日 下午1:26:36]  
 * @UpdateRemark: [说明本次修改内容]     
 * @Version:      [v1.0] 		   
 ************************************************** *
 */
@Controller
@RequestMapping("f30100103")
public class F30100103Controller extends BaseController {

	@Autowired
	private F30100103Service f30100103Service;

	@RequestMapping("queryKa16")
	@ResponseBody
	public Object queryKa16(@RequestParam Map<String, Object> map) {
		int pageIndex = Integer.parseInt( map.get("pageIndex").toString());
        int pageSize = Integer.parseInt(map.get("pageSize").toString());
        int start = pageIndex * pageSize;
        logger.info("--------------------aaaa:"+map);
		PageInfo page = new PageInfo();
        page.setShowCount(pageSize);
        page.setCurrentResult(start);
        map.put("page", page);
        List<F30100103VO> resultList = f30100103Service.getListPage(map);
		return new GridReturnVO(page.getTotalResult(), resultList);
	}
	
	/**
	 * @Title: 		 save   
	 * @Description: TODO[用一句话描述这个方法的作用]   
	 * @param map
	 * @return      
	 * @return_type: Map<String,Object>
	 */
	@RequestMapping("save")
	@ResponseBody
	public Map<String, Object> save(@RequestParam Map<String, Object> map) {
		Map<String, Object> result = new HashMap<String, Object>();
		f30100103Service.save(map);
		result.put("success", new Boolean(true));
		return result;
	}
	
	/**
	 * @Title: 		 edit   
	 * @Description: TODO[用一句话描述这个方法的作用]   
	 * @param map
	 * @return      
	 * @return_type: Map<String,Object>
	 */
	@RequestMapping("edit")
	@ResponseBody
	public Map<String, Object> edit(@RequestParam Map<String, Object> map) {
		Map<String, Object> result = new HashMap<String, Object>();
		f30100103Service.edit(map);
		result.put("success", new Boolean(true));
		return result;
	}

}
